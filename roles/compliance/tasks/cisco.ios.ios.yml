# Check ntp servers' IP address before replacing
- name: Check/Replace existing NTP for compliance
  cisco.ios.ios_ntp_global:
    config: "{{ ntp_ios }}"
    state: replaced
  #check_mode: "{{ check }}"
  register: ntp_diff
  tags: ntp

- ansible.builtin.debug:
    msg:
    - "current ntp config"
    - "{{ ntp_diff.before }}"
    - "replace commands (remediation)"
    - "{{ ntp_diff.commands | default ('no diff found') }}"
  tags: ntp

- name: Check/Apply SNMPv3 Authentication/Encryption Configuration
  cisco.ios.ios_snmp_server:
      config: "{{ snmp_ios }}"
      state: replaced
  #check_mode: "{{ check }}"
  register: snmp_diff
  tags: snmp

- ansible.builtin.debug:
    msg:
    - "current snmp config"
    - "{{ snmp_diff.before }}"
    - "replace commands (remediation)"
    - "{{ snmp_diff.commands | default ('no diff found') }}"
  tags: snmp

- name: Check/Apply IOSXE logging configuration
  cisco.ios.ios_logging_global:
    config: "{{ logging_ios }}"   
    state: replaced
  #check_mode: "{{ check }}"
  register: logging_diff
  tags: logging

- ansible.builtin.debug:
    msg:
    - "current logging config"
    - "{{ logging_diff.before }}"
    - "replace commands (remediation)"
    - "{{ logging_diff.commands | default ('no diff found') }}"
  tags: logging

- name: Check/Apply IOSXE ACLs 
  cisco.ios.ios_acls:
    config: "{{ acls }}"   
    state: replaced
  #check_mode: "{{ check }}"
  register: acls_diff
  tags: acl

- ansible.builtin.debug:
    msg:
    - "current acl config"
    - "{{ acls_diff.before }}"
    - "replace commands (remediation)"
    - "{{ acls_diff.commands | default ('no diff found') }}"
  tags: acl

- name: Check/Apply IOSXE ACLs Iterfaces
  cisco.ios.ios_acl_interfaces:
    config: "{{ acl_interfaces }}" 
    state: replaced
  #check_mode: "{{ check }}"
  register: acls_int_diff
  tags: acl

- ansible.builtin.debug:
    msg:
    - "current acl config"
    - "{{ acls_int_diff.before }}"
    - "replace commands (remediation)"
    - "{{ acls_int_diff.commands | default ('no diff found') }}"
  tags: acl

- name: Check Router Software Version
  cisco.ios.ios_command:
    commands: sh ver
  register: ver
  tags: sh_ver

- name: Assert IOS Version
  ansible.builtin.assert:
    that: 
      - "'{{ version_ios }}' in ver['stdout'][0]"
    fail_msg: "The ios version must be upgrade to '{{ version_ios }}'"
    success_msg: "The ios version is '{{ version_ios }}"
  tags: sh_ver


